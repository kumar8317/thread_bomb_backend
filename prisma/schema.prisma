// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ThreadStatus {
  ACTIVE
  EXPLODED
}

model Thread {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  author User @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
  count Int
  status ThreadStatus @default(ACTIVE)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  files File[]
}
model File {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  thread Thread @relation(fields: [threadId], references: [id])
  threadId String @db.ObjectId
  sentBy User @relation("SentFiles",fields: [sentById], references: [id])
  sentById  String @db.ObjectId
  sentTo User @relation("ReceivedFiles",fields: [sentToId], references: [id])
  sentToId  String @db.ObjectId
  imageUrl String
}
model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  threads Thread[]
  sentFiles File[] @relation("SentFiles")
  receivedFiles File[] @relation("ReceivedFiles")
}
